I. Exercices sur les chaînes de caractères

1. Écrire un script qui détermine si une chaîne contient ou non le caractère « e »._
2. Écrire un script qui compte le nombre d’occurrences du caractère « e » dans une chaîne.
3. Écrire un script qui recopie une chaîne (dans une nouvelle variable), en insérant des astérisques entre les caractères. Ainsi par exemple, « gaston » devra devenir « g*a*s*t*o*n »
4. Écrire un script qui recopie une chaîne (dans une nouvelle variable) en l’inversant. Ainsi par exemple, « zorglub » deviendra « bulgroz ».
5. En partant de l’exercice précédent, écrire un script qui détermine si une chaîne de caractères donnée est un palindrome (c’est-à-dire une chaîne qui peut se lire indifféremment dans les deux sens), comme par exemple « radar » ou « s.o.s ».



II. Exercices sur les listes

Soient les listes suivantes :
t1 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
t2 = [’Janvier’, ’Février’, ’Mars’, ’Avril’, ’Mai’, ’Juin’, ’Juillet’, ’Août’, ’Septembre’, ’Octobre’, ’Novembre’, ’Décembre’]

1.Écrire un petit programme qui crée une nouvelle liste t3. Celle-ci devra contenir tous les éléments des deux listes en les alternant, de telle manière que chaque nom de mois soit suivi du nombre de jours correspondant :
[’Janvier’,31,’Février’,28,’Mars’,31, etc...].

2. Écrire un programme qui affiche « proprement » tous les éléments d’une liste. Si on l’appliquait par exemple à la liste t2 de l’exercice ci-dessus, on devrait obtenir : Janvier Février Mars Avril Mai Juin Juillet Août Septembre Octobre Novembre Décembre

3. Écrire un programme qui recherche le plus grand élément présent dans une liste donnée. Par exemple, si on l’appliquait à la liste [32, 5, 12, 8, 3, 75, 2, 15], ce programme devrait afficher la phrase :
le plus grand élément de cette liste a la valeur 75.

4. Écrire un programme qui analyse un par un tous les éléments d’une liste de nombres (par exemple celle de l’exercice précédent) pour générer deux nouvelles listes. L’une contiendra seulement les nombres pairs de la liste initiale, et l’autre les nombres impairs. Par exemple, si la liste initiale est celle de l’exercice précédent, le programme devra construire une liste pairs qui contiendra [32, 12, 8, 2], et une liste impairs qui contiendra [5, 3, 75, 15].
Astuce : pensez à utiliser l’opérateur modulo (%) déjà cité précédemment.

5.Écrire un programme qui analyse un par un tous les éléments d’une liste de mots (par exemple : [’Jean’, ’Maximilien’, ’Brigitte’, ’Sonia’, ’Jean-Pierre’, ’Sandra’] ) pour générer deux nouvelles listes. L’une contiendra les mots comportant moins de 6 caractères, l’autre les mots comportant 6 caractères ou davantage.